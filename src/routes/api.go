package routes

import (
	_ "../docs" // docs is generated by Swag CLI, you have to import it.
	"../handler"
	"../middleware"
	"../user"
	"github.com/gorilla/mux"
	"github.com/jinzhu/gorm"
	httpSwagger "github.com/swaggo/http-swagger"
	"net/http"
)

func InitRoute(db *gorm.DB) *mux.Router {

	r := mux.NewRouter().StrictSlash(true)

	// swagger
	r.PathPrefix("/swagger/").Handler(httpSwagger.Handler(
		httpSwagger.URL("http://localhost:3000/swagger/doc.json"), //The url pointing to API definition
	))

	private := r.PathPrefix("/v1").Subrouter()
	private.Use(middleware.CorsEveryWhere)
	private .Use(middleware.Authentication)
	private.Use(middleware.RequestLogger)

	userRepo := user.NewUserRepository(db)
	// auth
	authHandler := handler.NewAuthHandler(userRepo)
	private.HandleFunc("/auth/login", authHandler.HandleLogin).Methods(http.MethodPost, http.MethodOptions)

	// user
	userHandler := handler.NewUserHandler(userRepo)
	private.HandleFunc("/users", userHandler.HandleGetAll).Methods(http.MethodGet)
	private.HandleFunc("/users", userHandler.HandleStore).Methods(http.MethodPost, http.MethodOptions)
	private.HandleFunc("/users/{id}", userHandler.HandleGetByID).Methods(http.MethodGet)
	private.HandleFunc("/users/{id}", userHandler.HandleUpdate).Methods(http.MethodPut, http.MethodOptions)
	private.HandleFunc("/users/{id}/change-password", userHandler.HandleChangePassword).Methods(http.MethodPut, http.MethodOptions)

	return r
}
